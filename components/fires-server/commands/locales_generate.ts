import { BaseCommand } from '@adonisjs/core/ace'
import type { CommandOptions } from '@adonisjs/core/types/ace'
import { getTags } from 'bcp47-language-tags/en'
import { writeFile } from 'node:fs/promises'

const excludedTags = [
  'zh-CHS', // duplicates zh-CN
  // Tags that aren't as common and are probably unlikely to be localised to
  'zh-SG',
  'zh-MO',
  'nb-NO',
  'en-TT',
  'en-JM',
  'en-CA',
  'en-CB',
  'en-BZ',
  'en-PH',
  'en-NZ',
  'en-ZW',
  'es-AR',
  'es-BO',
  'es-CL',
  'es-CO',
  'es-CR',
  'es-CU',
  'es-DO',
  'es-EC',
  'es-GT',
  'es-HN',
  'es-NI',
  'es-PA',
  'es-PE',
  'es-PR',
  'es-PY',
  'es-SV',
  'es-UY',
  'es-VE',
  'fr-BE',
  'fr-LU',
  'fr-MC',
]

export default class LocalesGenerate extends BaseCommand {
  static commandName = 'locales:generate'
  static description = 'Outputs the config/locales.ts file based on common bcp47 languages'

  static options: CommandOptions = {}

  async run() {
    const tags = getTags()
      .map((tag) => tag.tag)
      .filter((tag) => !excludedTags.includes(tag))
      .sort()

    const localesPath = this.app.configPath('locales.ts')

    await writeFile(
      localesPath,
      `
// THIS FILE IS AUTO-GENERATED BY: node ace locales:generate

const locales = ${JSON.stringify(tags, null, 2)}

export default locales
`
        .trimStart()
        .replaceAll('"', "'")
        .replace(`${tags.at(-1)}'`, `${tags.at(-1)}',`)
    )
  }
}
